# Generated by Django 2.2.4 on 2021-08-18 11:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import sortedm2m.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
        ('customer', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AmountChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=550, verbose_name='Название')),
                ('value', models.IntegerField(verbose_name='Значение')),
                ('is_read_only', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Количество каналов',
                'verbose_name_plural': 'Количество каналов',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.CharField(max_length=500, verbose_name='Индекс')),
                ('name', models.CharField(max_length=500, verbose_name='Обозначение')),
            ],
            options={
                'verbose_name': 'Индекс назначения КО',
                'verbose_name_plural': 'Индекс назначения КО',
            },
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=550, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Потребитель',
                'verbose_name_plural': 'Потребители',
            },
        ),
        migrations.CreateModel(
            name='LineType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип линии',
                'verbose_name_plural': 'Типы линии',
            },
        ),
        migrations.CreateModel(
            name='MainLineType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=550)),
            ],
            options={
                'verbose_name': 'Тип линии АК',
                'verbose_name_plural': 'Типы линии АК',
            },
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Название')),
                ('comments', models.CharField(blank=True, max_length=500, null=True, verbose_name='Примечание')),
                ('comments_GOZ', models.CharField(blank=True, max_length=500, null=True, verbose_name='Примечание(ГОЗ)')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('total_amount_channels', models.IntegerField(blank=True, default=0, null=True, verbose_name='Задействованные каналы')),
                ('order', models.CharField(blank=True, max_length=500, null=True, verbose_name='№ и дата распоряжения')),
                ('src', models.ImageField(blank=True, upload_to='files/', verbose_name='Скан распоряжения')),
                ('is_transit', models.BooleanField(default=False)),
                ('amount_channels', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='object_channel', to='objects.AmountChannel', verbose_name='Монтированные каналы')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='obj_category', to='objects.Category')),
                ('consumer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='obj_consumer', to='objects.Consumer')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Profile')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='obj_cust', to='customer.Customer')),
            ],
            options={
                'verbose_name': 'Линия передачи/Обьект/Тракт',
                'verbose_name_plural': 'Линия передачи/Обьект/Тракт',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Outfit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outfit', models.CharField(blank=True, max_length=500, null=True, verbose_name='Аббревиатура')),
                ('adding', models.CharField(max_length=500, verbose_name='Название')),
                ('num_outfit', models.CharField(blank=True, max_length=500, null=True, verbose_name='Номер')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('length_kls', models.FloatField(blank=True, default=0, null=True, verbose_name='Протяженность кан*км КЛС')),
                ('length_vls', models.FloatField(blank=True, default=0, null=True, verbose_name='Протяженность кан*км ВЛС')),
                ('length_rrl', models.FloatField(blank=True, default=0, null=True, verbose_name='Протяженность кан*км РРЛ')),
                ('total_number_kls', models.IntegerField(blank=True, default=0, null=True, verbose_name='Общее количество линейных трактов КЛС')),
                ('corresponding_norm_kls', models.IntegerField(blank=True, default=0, null=True, verbose_name='Соответствующих норме КЛС')),
                ('total_number_vls', models.IntegerField(blank=True, default=0, null=True, verbose_name='Общее количество линейных трактов ВЛС')),
                ('corresponding_norm_vls', models.IntegerField(blank=True, default=0, null=True, verbose_name='Соответствующих норме ВЛС')),
                ('total_number_rrl', models.IntegerField(blank=True, default=0, null=True, verbose_name='Общее количество линейных трактов РРЛ')),
                ('corresponding_norm_rrl', models.IntegerField(blank=True, default=0, null=True, verbose_name='Соответствующих норме РРЛ')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Profile')),
            ],
            options={
                'verbose_name': 'Предприятие',
                'verbose_name_plural': 'Предприятия',
            },
        ),
        migrations.CreateModel(
            name='TPO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'invalid': 'Это поле обязательно.'}, max_length=500, verbose_name='Название')),
                ('index', models.CharField(max_length=500, verbose_name='Индекс')),
            ],
            options={
                'verbose_name': 'ТПО',
                'verbose_name_plural': 'ТПО',
            },
        ),
        migrations.CreateModel(
            name='TypeOfLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип принадлежности',
                'verbose_name_plural': 'Тип принадлежности',
            },
        ),
        migrations.CreateModel(
            name='TypeOfTrakt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'ПГ/ВГ/ТГ/ЧГ/РГ',
                'verbose_name_plural': 'ПГ/ВГ/ТГ/ЧГ/РГ',
            },
        ),
        migrations.CreateModel(
            name='Transit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('create_circuit_transit', models.BooleanField(default=False)),
                ('trassa', sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, related_name='transits', to='objects.Object')),
            ],
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.CharField(max_length=500, unique=True, verbose_name='ИП')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('region', models.CharField(blank=True, max_length=550, null=True, verbose_name='Район')),
                ('type_equipment', models.CharField(blank=True, max_length=550, null=True, verbose_name='Тип оборудования')),
                ('id_outfit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='point_out', to='objects.Outfit')),
                ('tpo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='point_tpo', to='objects.TPO')),
            ],
        ),
        migrations.CreateModel(
            name='OutfitWorker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='ФИО')),
                ('outfit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outfit_worker', to='objects.Outfit')),
            ],
            options={
                'verbose_name': 'Сотрудник предприятия',
                'verbose_name_plural': 'Сотрудники предприятий',
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='outfit',
            name='tpo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='objects.TPO'),
        ),
        migrations.AddField(
            model_name='outfit',
            name='type_outfit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='objects.TypeOfLocation'),
        ),
        migrations.CreateModel(
            name='OrderObjectPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('src', models.FileField(blank=True, null=True, upload_to='files/')),
                ('object', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_object_photo', to='objects.Object', verbose_name='Распоряжение')),
            ],
        ),
        migrations.AddField(
            model_name='object',
            name='id_outfit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='obj_out', to='objects.Outfit'),
        ),
        migrations.AddField(
            model_name='object',
            name='id_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parents', to='objects.Object'),
        ),
        migrations.AddField(
            model_name='object',
            name='our',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='obj_our', to='objects.TypeOfLocation'),
        ),
        migrations.AddField(
            model_name='object',
            name='point1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='obj_point', to='objects.Point', verbose_name='ИП приема'),
        ),
        migrations.AddField(
            model_name='object',
            name='point2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='obj_point2', to='objects.Point', verbose_name='ИП пер'),
        ),
        migrations.AddField(
            model_name='object',
            name='tpo1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='obj_tpo', to='objects.TPO'),
        ),
        migrations.AddField(
            model_name='object',
            name='tpo2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='obj_tpo2', to='objects.TPO'),
        ),
        migrations.AddField(
            model_name='object',
            name='type_line',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='obj_type_line', to='objects.LineType'),
        ),
        migrations.AddField(
            model_name='object',
            name='type_of_trakt',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='obj_trakt_type', to='objects.TypeOfTrakt'),
        ),
        migrations.AddField(
            model_name='linetype',
            name='main_line_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='main_line_type', to='objects.MainLineType'),
        ),
        migrations.CreateModel(
            name='IP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ip_object', to='objects.Object')),
                ('point_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ip_point', to='objects.Point')),
                ('tpo_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='objects.TPO')),
            ],
            options={
                'verbose_name': 'ИП',
                'verbose_name_plural': 'ИПы',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='HistoricalPoint',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('point', models.CharField(db_index=True, max_length=500, verbose_name='ИП')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('region', models.CharField(blank=True, max_length=550, null=True, verbose_name='Район')),
                ('type_equipment', models.CharField(blank=True, max_length=550, null=True, verbose_name='Тип оборудования')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='history_point_log', to='objects.Point')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('id_outfit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.Outfit')),
                ('tpo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.TPO')),
            ],
            options={
                'verbose_name': 'historical point',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOutfit',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('outfit', models.CharField(blank=True, max_length=500, null=True, verbose_name='Аббревиатура')),
                ('adding', models.CharField(max_length=500, verbose_name='Название')),
                ('num_outfit', models.CharField(blank=True, max_length=500, null=True, verbose_name='Номер')),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('length_kls', models.FloatField(blank=True, default=0, null=True, verbose_name='Протяженность кан*км КЛС')),
                ('length_vls', models.FloatField(blank=True, default=0, null=True, verbose_name='Протяженность кан*км ВЛС')),
                ('length_rrl', models.FloatField(blank=True, default=0, null=True, verbose_name='Протяженность кан*км РРЛ')),
                ('total_number_kls', models.IntegerField(blank=True, default=0, null=True, verbose_name='Общее количество линейных трактов КЛС')),
                ('corresponding_norm_kls', models.IntegerField(blank=True, default=0, null=True, verbose_name='Соответствующих норме КЛС')),
                ('total_number_vls', models.IntegerField(blank=True, default=0, null=True, verbose_name='Общее количество линейных трактов ВЛС')),
                ('corresponding_norm_vls', models.IntegerField(blank=True, default=0, null=True, verbose_name='Соответствующих норме ВЛС')),
                ('total_number_rrl', models.IntegerField(blank=True, default=0, null=True, verbose_name='Общее количество линейных трактов РРЛ')),
                ('corresponding_norm_rrl', models.IntegerField(blank=True, default=0, null=True, verbose_name='Соответствующих норме РРЛ')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.Profile')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='history_outfit_log', to='objects.Outfit')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tpo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.TPO')),
                ('type_outfit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.TypeOfLocation')),
            ],
            options={
                'verbose_name': 'historical Предприятие',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalObject',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Название')),
                ('comments', models.CharField(blank=True, max_length=500, null=True, verbose_name='Примечание')),
                ('comments_GOZ', models.CharField(blank=True, max_length=500, null=True, verbose_name='Примечание(ГОЗ)')),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('total_amount_channels', models.IntegerField(blank=True, default=0, null=True, verbose_name='Задействованные каналы')),
                ('order', models.CharField(blank=True, max_length=500, null=True, verbose_name='№ и дата распоряжения')),
                ('src', models.TextField(blank=True, max_length=100, verbose_name='Скан распоряжения')),
                ('is_transit', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('amount_channels', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.AmountChannel', verbose_name='Монтированные каналы')),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.Category')),
                ('consumer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.Consumer')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.Profile')),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='customer.Customer')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='history_object_log', to='objects.Object')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('id_outfit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.Outfit')),
                ('id_parent', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.Object')),
                ('our', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.TypeOfLocation')),
                ('point1', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.Point', verbose_name='ИП приема')),
                ('point2', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.Point', verbose_name='ИП пер')),
                ('tpo1', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.TPO')),
                ('tpo2', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.TPO')),
                ('type_line', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.LineType')),
                ('type_of_trakt', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.TypeOfTrakt')),
            ],
            options={
                'verbose_name': 'historical Линия передачи/Обьект/Тракт',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIP',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='history_ip_log', to='objects.IP')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('object_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.Object')),
                ('point_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.Point')),
                ('tpo_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.TPO')),
            ],
            options={
                'verbose_name': 'historical ИП',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Bug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Profile')),
            ],
            options={
                'verbose_name': 'Ошибка',
                'verbose_name_plural': 'Ошибки',
            },
        ),
        migrations.CreateModel(
            name='Bridge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bridges', to='objects.Object')),
                ('transit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='can_see', to='objects.Transit')),
            ],
        ),
    ]
